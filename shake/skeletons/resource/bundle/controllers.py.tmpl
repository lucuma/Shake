# -*- coding: utf-8 -*-
"""
"""
import shake
from shake import url_for, redirect
from shake_auth import protected

from main import app, render, db
from . import models as m
from .forms import [[ class_name ]]Form


def index(request):
    """/[[ plural ]]/  [GET]
    """
    [[ plural ]] = m.get_[[ plural ]]()
    return render('[[ plural ]]/index.html', locals())


def show(request, [[ singular ]]_id):
    """/[[ plural ]]/1/  [GET]
    """
    [[ singular ]] = m.get_[[ singular ]]([[ singular ]]_id)
    return render('[[ plural ]]/show.html', locals())


@protected()
def new(request):
    """/[[ plural ]]/new/
    """
    form = [[ class_name ]]Form(request.form, files=request.files)

    if request.is_post and form.is_valid():
        [[ singular ]] = form.save()
        db.commit()
        request.flash('CREATED', 'success', extra=[[ singular ]].show_url)
        return redirect(url_for('[[ plural ]].index'))

    return render('[[ plural ]]/edit.html', locals())


@protected()
def edit(request, [[ singular ]]_id):
    """/[[ plural ]]/1/edit/
    """
    [[ singular ]] = m.get_[[ singular ]]([[ singular ]]_id)
    form = [[ class_name ]]Form(request.form, obj=program, files=request.files)

    if request.is_post and form.is_valid():
        form.save()
        db.commit()
        request.flash('UPDATED', 'success', extra=[[ singular ]].show_url)
        return redirect(url_for('[[ plural ]].index'))

    return render('[[ plural ]]/edit.html', locals())


@protected(csrf=True)
def delete(request, [[ singular ]]_id):
    """/[[ plural ]]/1/delete/
    """
    [[ singular ]] = m.get_[[ singular ]]([[ singular ]]_id, deleted=True)
    [[ singular ]].deleted = True
    db.commit()

    restore_url = [[ singular ]].restore_url
    if request.is_xhr:
        data = [[ singular ]].to_dict()
        data['restore_url'] = restore_url
        return data

    request.flash('DELETED', 'danger', extra=restore_url)
    return redirect(url_for('[[ plural ]].index'))


@protected(csrf=True)
def restore(request, [[ singular ]]_id):
    """/[[ plural ]]/1/restore/
    """
    [[ singular ]] = m.get_[[ singular ]]([[ singular ]]_id, deleted=True)
    [[ singular ]].deleted = False
    db.commit()
    
    if request.is_xhr:
        return [[ singular ]].to_dict()
    
    request.flash('RESTORED', 'success', extra=[[ singular ]].show_url)
    return redirect(url_for('[[ plural ]].index'))

